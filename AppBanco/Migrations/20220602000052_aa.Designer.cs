// <auto-generated />
using System;
using AppBanco.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppBanco.Migrations
{
    [DbContext(typeof(AccountContext))]
    [Migration("20220602000052_aa")]
    partial class aa
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("AppBanco.Models.AccTran", b =>
                {
                    b.Property<int>("NumAccount")
                        .HasColumnType("int");

                    b.Property<int>("IDTransaction")
                        .HasColumnType("int");

                    b.HasKey("NumAccount", "IDTransaction");

                    b.HasIndex("IDTransaction");

                    b.ToTable("AccTran");
                });

            modelBuilder.Entity("AppBanco.Models.Account", b =>
                {
                    b.Property<int>("NumAccount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("Balance")
                        .HasColumnType("real");

                    b.HasKey("NumAccount");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("AppBanco.Models.Transaction", b =>
                {
                    b.Property<int>("IDTransaction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("IDSourceAccount")
                        .HasColumnType("int");

                    b.Property<int>("IDTargetAccount")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionValue")
                        .HasColumnType("int");

                    b.HasKey("IDTransaction");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("AppBanco.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumAccount1")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("NumAccount1");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AppBanco.Models.AccTran", b =>
                {
                    b.HasOne("AppBanco.Models.Transaction", "Transaction")
                        .WithMany("AccTran")
                        .HasForeignKey("IDTransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppBanco.Models.Account", "Account")
                        .WithMany("AccTran")
                        .HasForeignKey("NumAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("AppBanco.Models.User", b =>
                {
                    b.HasOne("AppBanco.Models.Account", "NumAccount")
                        .WithMany()
                        .HasForeignKey("NumAccount1");

                    b.Navigation("NumAccount");
                });

            modelBuilder.Entity("AppBanco.Models.Account", b =>
                {
                    b.Navigation("AccTran");
                });

            modelBuilder.Entity("AppBanco.Models.Transaction", b =>
                {
                    b.Navigation("AccTran");
                });
#pragma warning restore 612, 618
        }
    }
}
